generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id            Int         @id(map: "users_pk") @default(autoincrement())
  email         String      @unique(map: "users_unique_email") @db.VarChar(255)
  password      Bytes
  role_id       Int         @default(2)
  refresh_token String?     @db.VarChar(255)
  created_at    DateTime    @default(now()) @db.Date
  updated_at    DateTime    @default(now()) @db.Date
  favorites     favorites[]
  roles         roles       @relation(fields: [role_id], references: [id], onUpdate: Restrict, map: "users_roles_fk")
}

model products {
  sale_price  Decimal     @db.Decimal(10, 2)
  name        String      @db.VarChar(255)
  id          Int         @id(map: "products_pk") @default(autoincrement())
  description String?
  category_id Int         @default(1)
  quantity    Int
  favorites   favorites[]
  images      images[]
  categories  categories  @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "products_categories_fk")
}

model roles {
  id    Int     @id(map: "roles_pk") @default(autoincrement())
  name  String  @db.VarChar(63)
  users users[]
}

model images {
  id            Int      @id(map: "images_pk") @default(autoincrement())
  path_to_image String   @db.VarChar(255)
  product_id    Int
  products      products @relation(fields: [product_id], references: [id], onDelete: Cascade, map: "images_products_fk")
}

model categories {
  id       Int        @id(map: "categories_pk") @default(autoincrement())
  name     String     @unique(map: "categories_unique_name") @db.VarChar(255)
  products products[]
}

model favorites {
  id         Int      @id @default(autoincrement())
  user_id    Int
  product_id Int
  products   products @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "favorites_products_fk")
  users      users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "favorites_users_fk")

  @@unique([user_id, product_id], map: "favorites_unique_user_id_product_id")
}
